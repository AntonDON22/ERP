#!/bin/bash

# üîç –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–û–õ–ù–û–¢–´ –ú–û–î–£–õ–Ø
# 
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–¥—É–ª—è —Å–æ–≥–ª–∞—Å–Ω–æ MODULE_IMPLEMENTATION_RULES.md

MODULE_NAME=${1:-"shipments"}
MODULE_CAPITAL=$(echo "${MODULE_NAME^}")
MISSING_COUNT=0
TOTAL_CHECKS=0

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –º–æ–¥—É–ª—è: $MODULE_NAME"
echo "========================================"

# 1. BACKEND –ê–†–•–ò–¢–ï–ö–¢–£–†–ê
echo ""
echo "üì¶ BACKEND –ê–†–•–ò–¢–ï–ö–¢–£–†–ê:"

# IStorage –º–µ—Ç–æ–¥—ã
((TOTAL_CHECKS++))
if grep -q "get${MODULE_CAPITAL}" server/storage.ts; then
    echo "‚úÖ IStorage –º–µ—Ç–æ–¥—ã –≤ server/storage.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢: IStorage –º–µ—Ç–æ–¥—ã –≤ server/storage.ts"
    ((MISSING_COUNT++))
fi

# –ú–∞—Ä—à—Ä—É—Ç—ã
((TOTAL_CHECKS++))
if [ -f "server/routes/${MODULE_NAME}Routes.ts" ]; then
    echo "‚úÖ server/routes/${MODULE_NAME}Routes.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: server/routes/${MODULE_NAME}Routes.ts"
    ((MISSING_COUNT++))
fi

# –°–µ—Ä–≤–∏—Å
((TOTAL_CHECKS++))
if [ -f "server/services/${MODULE_NAME}Service.ts" ]; then
    echo "‚úÖ server/services/${MODULE_NAME}Service.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: server/services/${MODULE_NAME}Service.ts"
    ((MISSING_COUNT++))
fi

# –°—Ö–µ–º—ã –≤ shared/schema.ts
((TOTAL_CHECKS++))
if grep -q "${MODULE_NAME}" shared/schema.ts; then
    echo "‚úÖ –°—Ö–µ–º—ã –≤ shared/schema.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢: –°—Ö–µ–º—ã –≤ shared/schema.ts"
    ((MISSING_COUNT++))
fi

# API –º–∞—Ä—à—Ä—É—Ç—ã
((TOTAL_CHECKS++))
if grep -q "${MODULE_NAME^^}" shared/apiRoutes.ts; then
    echo "‚úÖ API –º–∞—Ä—à—Ä—É—Ç—ã –≤ shared/apiRoutes.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢: API –º–∞—Ä—à—Ä—É—Ç—ã –≤ shared/apiRoutes.ts"
    ((MISSING_COUNT++))
fi

# 2. FRONTEND –ê–†–•–ò–¢–ï–ö–¢–£–†–ê
echo ""
echo "üé® FRONTEND –ê–†–•–ò–¢–ï–ö–¢–£–†–ê:"

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–ø–∏—Å–∫–∞
((TOTAL_CHECKS++))
if [ -f "client/src/pages/${MODULE_CAPITAL}List.tsx" ]; then
    echo "‚úÖ client/src/pages/${MODULE_CAPITAL}List.tsx"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: client/src/pages/${MODULE_CAPITAL}List.tsx"
    ((MISSING_COUNT++))
fi

# –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã
((TOTAL_CHECKS++))
if [ -f "client/src/components/${MODULE_CAPITAL}.tsx" ]; then
    echo "‚úÖ client/src/components/${MODULE_CAPITAL}.tsx"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: client/src/components/${MODULE_CAPITAL}.tsx"
    ((MISSING_COUNT++))
fi

# API —Ö—É–∫–∏
((TOTAL_CHECKS++))
if [ -f "client/src/hooks/api/use${MODULE_CAPITAL}.ts" ]; then
    echo "‚úÖ client/src/hooks/api/use${MODULE_CAPITAL}.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: client/src/hooks/api/use${MODULE_CAPITAL}.ts"
    ((MISSING_COUNT++))
fi

# –ú–∞—Ä—à—Ä—É—Ç –≤ App.tsx
((TOTAL_CHECKS++))
if grep -q "/${MODULE_NAME}" client/src/App.tsx; then
    echo "‚úÖ –ú–∞—Ä—à—Ä—É—Ç –≤ client/src/App.tsx"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: –ú–∞—Ä—à—Ä—É—Ç –≤ client/src/App.tsx"
    ((MISSING_COUNT++))
fi

# –ù–∞–≤–∏–≥–∞—Ü–∏—è
((TOTAL_CHECKS++))
if grep -q "${MODULE_NAME}" client/src/components/Navigation.tsx; then
    echo "‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ client/src/components/Navigation.tsx"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ client/src/components/Navigation.tsx"
    ((MISSING_COUNT++))
fi

# 3. –°–ò–°–¢–ï–ú–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø (–ö–†–ò–¢–ò–ß–ù–û!)
echo ""
echo "üß™ –°–ò–°–¢–ï–ú–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:"

# Unit —Ç–µ—Å—Ç—ã —Å–µ—Ä–≤–∏—Å–∞
((TOTAL_CHECKS++))
if [ -f "tests/services/${MODULE_NAME}Service.test.ts" ]; then
    echo "‚úÖ tests/services/${MODULE_NAME}Service.test.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: tests/services/${MODULE_NAME}Service.test.ts"
    ((MISSING_COUNT++))
fi

# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
((TOTAL_CHECKS++))
if [ -f "tests/integration/${MODULE_NAME}Integration.test.ts" ]; then
    echo "‚úÖ tests/integration/${MODULE_NAME}Integration.test.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: tests/integration/${MODULE_NAME}Integration.test.ts"
    ((MISSING_COUNT++))
fi

# –¢–µ—Å—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏
((TOTAL_CHECKS++))
if [ -f "tests/validation/${MODULE_NAME}Validation.test.ts" ]; then
    echo "‚úÖ tests/validation/${MODULE_NAME}Validation.test.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: tests/validation/${MODULE_NAME}Validation.test.ts"
    ((MISSING_COUNT++))
fi

# API –º–∞—Ä—à—Ä—É—Ç—ã –≤ —Ç–µ—Å—Ç–∞—Ö
((TOTAL_CHECKS++))
if grep -q "${MODULE_NAME}" tests/api-routing.test.ts; then
    echo "‚úÖ –¢–µ—Å—Ç API –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤ tests/api-routing.test.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: –¢–µ—Å—Ç API –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤ tests/api-routing.test.ts"
    ((MISSING_COUNT++))
fi

# 4. –ö–ï–®–ò–†–û–í–ê–ù–ò–ï –ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨
echo ""
echo "‚ö° –ö–ï–®–ò–†–û–í–ê–ù–ò–ï –ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨:"

# –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤
((TOTAL_CHECKS++))
if grep -q "${MODULE_NAME}" server/routes/${MODULE_NAME}Routes.ts 2>/dev/null && grep -q "Cache\|cache" server/routes/${MODULE_NAME}Routes.ts; then
    echo "‚úÖ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ server/routes/${MODULE_NAME}Routes.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ server/routes/${MODULE_NAME}Routes.ts"
    ((MISSING_COUNT++))
fi

# –†–∞–∑–æ–≥—Ä–µ–≤ –∫–µ—à–∞
((TOTAL_CHECKS++))
if grep -q "${MODULE_NAME}" server/services/cacheWarmupService.ts; then
    echo "‚úÖ –†–∞–∑–æ–≥—Ä–µ–≤ –∫–µ—à–∞ –≤ server/services/cacheWarmupService.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: –†–∞–∑–æ–≥—Ä–µ–≤ –∫–µ—à–∞ –≤ server/services/cacheWarmupService.ts"
    ((MISSING_COUNT++))
fi

# 5. –í–ê–õ–ò–î–ê–¶–ò–Ø –ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨
echo ""
echo "üîí –í–ê–õ–ò–î–ê–¶–ò–Ø –ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨:"

# –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–µ–π
((TOTAL_CHECKS++))
if grep -q "${MODULE_NAME}" shared/zFields.ts; then
    echo "‚úÖ –ü–æ–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ shared/zFields.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢: –ü–æ–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ shared/zFields.ts"
    ((MISSING_COUNT++))
fi

# Middleware –≤–∞–ª–∏–¥–∞—Ü–∏–∏
((TOTAL_CHECKS++))
if grep -q "${MODULE_NAME}" server/middleware/validation.ts; then
    echo "‚úÖ Middleware –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ server/middleware/validation.ts"
else
    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: Middleware –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ server/middleware/validation.ts"
    ((MISSING_COUNT++))
fi

# –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
echo ""
echo "========================================"
echo "üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:"
echo "–í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: $TOTAL_CHECKS"
echo "–í—ã–ø–æ–ª–Ω–µ–Ω–æ: $((TOTAL_CHECKS - MISSING_COUNT))"
echo "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: $MISSING_COUNT"

COMPLETION_RATE=$((100 * (TOTAL_CHECKS - MISSING_COUNT) / TOTAL_CHECKS))
echo "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç—å: $COMPLETION_RATE%"

if [ $MISSING_COUNT -eq 0 ]; then
    echo ""
    echo "üéâ –ú–û–î–£–õ–¨ $MODULE_NAME –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í!"
    echo "–í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º."
    exit 0
else
    echo ""
    echo "‚ö†Ô∏è  –ú–û–î–£–õ–¨ $MODULE_NAME –ù–ï –ó–ê–í–ï–†–®–ï–ù!"
    echo "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å $MISSING_COUNT –ø—Ä–æ–±–ª–µ–º(—ã)."
    echo ""
    echo "üìñ –°–º–æ—Ç—Ä–∏—Ç–µ docs/MODULE_IMPLEMENTATION_RULES.md –¥–ª—è –¥–µ—Ç–∞–ª–µ–π."
    exit 1
fi