Техническое задание для Replit
Тема: Проверка схем валидации и добавление предупреждений о нарушении архитектурных правил

Цель: Найти и отметить схемы, в которых поля типа “цена”, “количество”, “процент”, “вес”, “размеры” и другие числовые значения валидируются вручную через z.number или z.string, вместо использования централизованных полей из файла zFields.ts. Это необходимо для предотвращения повторяющихся ошибок, которые уже возникали ранее из-за несогласованности типов.

Задачи:
	1.	Просмотреть все схемы в проекте, особенно в файлах schema.ts, schema/*.ts, modules, routes и services. Найти все случаи, где для полей типа цена, количество, сумма, процент и подобных используется ручная валидация — например, z.number(), z.string(), z.coerce.number и подобное.
	2.	В каждой найденной схеме, где поле не использует импорт из zFields.ts, но должно, необходимо добавить текстовый комментарий. Текст комментария:
“Внимание: поле валидируется вручную. Рекомендуется использовать соответствующее поле из zFields.ts, например zPriceString, zQuantityInteger, zPercent и т.д.”
	3.	Если поле можно безопасно заменить без изменения логики и структуры других модулей, заменить его на соответствующее поле из zFields.ts. Если замена может вызвать побочные эффекты — оставить комментарий и не менять.
	4.	В документацию по схемам (например, в файл shared/SCHEMA_GUIDE.md или README.md) добавить правило: все числовые и строковые поля схем должны использовать только поля, определённые в zFields.ts. Запрещено использовать z.string и z.number напрямую для типовых значений. Если требуется новая валидация — она сначала добавляется в zFields.ts, а затем используется в схемах.
	5.	(Дополнительно) Добавить простой тест, который проверяет работу полей из zFields.ts — таких как zPrice, zQuantity, zQuantityInteger и других. Этот тест должен убедиться, что поля корректно валидируют числа, строки, отбрасывают пустые значения и возвращают нужный тип.

Ожидаемый результат:

Все схемы или используют поля из zFields.ts, или помечены соответствующим комментарием, что валидация временно ручная. Новые схемы создаются по шаблону, старые не ломаются, а ошибки, связанные с типами данных (строка вместо числа), больше не повторяются. Команда разработки понимает и следует установленным правилам.