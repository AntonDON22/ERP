#!/usr/bin/env node

/**
 * üîç –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–£–î–ò–¢ –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–ò –ò–ù–¢–ï–†–§–ï–ô–°–ê
 * 
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
 * –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º mobile-first –¥–∏–∑–∞–π–Ω–∞
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
const CONFIG = {
  breakpoints: {
    mobile: '320px',
    tablet: '768px', 
    desktop: '1024px'
  },
  requiredClasses: [
    'sm:', 'md:', 'lg:', 'xl:', '2xl:',
    'max-w-', 'w-full', 'overflow-x-auto',
    'px-', 'py-', 'gap-', 'space-'
  ],
  criticalComponents: [
    'DataTable', 'Navigation', 'Dashboard',
    'ProductsList', 'CreateOrder', 'EditOrder'
  ]
};

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m'
};

class ResponsivenessAuditor {
  constructor() {
    this.issues = [];
    this.scanned = 0;
    this.responsive = 0;
  }

  /**
   * –°–∫–∞–Ω–∏—Ä—É–µ—Ç —Ñ–∞–π–ª –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
   */
  scanFile(filePath) {
    try {
      const content = fs.readFileSync(filePath, 'utf8');
      const relativePath = path.relative(process.cwd(), filePath);
      
      this.scanned++;
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
      const hasResponsiveClasses = this.checkResponsiveClasses(content);
      const hasOverflowProtection = this.checkOverflowProtection(content);
      const hasProperSpacing = this.checkProperSpacing(content);
      
      if (hasResponsiveClasses) {
        this.responsive++;
      }
      
      // –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º
      const issues = [];
      
      if (!hasResponsiveClasses) {
        issues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã (sm:, md:, lg:)');
      }
      
      if (!hasOverflowProtection) {
        issues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è (overflow-x-auto)');
      }
      
      if (!hasProperSpacing) {
        issues.push('–ù–µ—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –æ—Ç—Å—Ç—É–ø–æ–≤ (px-, py-, gap-)');
      }
      
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      if (this.isCriticalComponent(relativePath)) {
        const criticalIssues = this.checkCriticalComponent(content, relativePath);
        issues.push(...criticalIssues);
      }
      
      if (issues.length > 0) {
        this.issues.push({
          file: relativePath,
          issues
        });
      }
      
      return {
        responsive: hasResponsiveClasses,
        issues: issues.length
      };
      
    } catch (error) {
      console.error(`${colors.red}–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ ${filePath}:${colors.reset}`, error.message);
      return { responsive: false, issues: 1 };
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
   */
  checkResponsiveClasses(content) {
    const responsivePatterns = [
      /\b(sm|md|lg|xl|2xl):/g,
      /\bmax-w-\w+/g,
      /\bw-full/g
    ];
    
    return responsivePatterns.some(pattern => pattern.test(content));
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞—â–∏—Ç—É –æ—Ç –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è
   */
  checkOverflowProtection(content) {
    const overflowPatterns = [
      /\boverflow-x-auto/g,
      /\boverflow-hidden/g,
      /\bscroll-smooth/g
    ];
    
    return overflowPatterns.some(pattern => pattern.test(content));
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
   */
  checkProperSpacing(content) {
    const spacingPatterns = [
      /\b(px|py|gap|space)-(2|4|6|8)/g,
      /\b(sm|md|lg):(px|py|gap|space)-\d+/g
    ];
    
    return spacingPatterns.some(pattern => pattern.test(content));
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
   */
  isCriticalComponent(filePath) {
    return CONFIG.criticalComponents.some(component => 
      filePath.includes(component)
    );
  }

  /**
   * –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
   */
  checkCriticalComponent(content, filePath) {
    const issues = [];
    
    // DataTable –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å ResponsiveTableWrapper
    if (filePath.includes('DataTable')) {
      if (!content.includes('ResponsiveTableWrapper')) {
        issues.push('DataTable –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ResponsiveTableWrapper');
      }
    }
    
    // Navigation –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
    if (filePath.includes('Navigation')) {
      if (!content.includes('MenuIcon') && !content.includes('mobile')) {
        issues.push('Navigation –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é');
      }
    }
    
    // –§–æ—Ä–º—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º–∏
    if (content.includes('useForm') || content.includes('Form')) {
      if (!content.includes('grid-cols-1') && !content.includes('sm:grid-cols-2')) {
        issues.push('–§–æ—Ä–º—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é —Å–µ—Ç–∫—É');
      }
    }
    
    return issues;
  }

  /**
   * –°–∫–∞–Ω–∏—Ä—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
   */
  scanDirectory(dir) {
    const files = fs.readdirSync(dir);
    
    files.forEach(file => {
      const fullPath = path.join(dir, file);
      const stat = fs.statSync(fullPath);
      
      if (stat.isDirectory()) {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º node_modules –∏ –¥—Ä—É–≥–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–ø–∫–∏
        if (!['node_modules', '.git', 'dist', 'build'].includes(file)) {
          this.scanDirectory(fullPath);
        }
      } else if (file.endsWith('.tsx') || file.endsWith('.jsx')) {
        this.scanFile(fullPath);
      }
    });
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –æ–± –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
   */
  generateReport() {
    console.log(`${colors.bright}${colors.cyan}=== –ê–£–î–ò–¢ –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–ò –ò–ù–¢–ï–†–§–ï–ô–°–ê ===${colors.reset}\n`);
    
    // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const responsivePercent = Math.round((this.responsive / this.scanned) * 100);
    
    console.log(`${colors.bright}üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:${colors.reset}`);
    console.log(`   –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${colors.bright}${this.scanned}${colors.reset}`);
    console.log(`   –ê–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö: ${colors.green}${this.responsive}${colors.reset}`);
    console.log(`   –ü—Ä–æ—Ü–µ–Ω—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${responsivePercent >= 80 ? colors.green : colors.yellow}${responsivePercent}%${colors.reset}`);
    console.log(`   –ü—Ä–æ–±–ª–µ–º –Ω–∞–π–¥–µ–Ω–æ: ${this.issues.length > 0 ? colors.red : colors.green}${this.issues.length}${colors.reset}\n`);
    
    // –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–±–ª–µ–º–∞–º
    if (this.issues.length > 0) {
      console.log(`${colors.bright}${colors.red}üö® –û–ë–ù–ê–†–£–ñ–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:${colors.reset}\n`);
      
      this.issues.forEach((item, index) => {
        console.log(`${colors.bright}${index + 1}. ${colors.yellow}${item.file}${colors.reset}`);
        item.issues.forEach(issue => {
          console.log(`   ${colors.red}‚ñ∂${colors.reset} ${issue}`);
        });
        console.log('');
      });
    } else {
      console.log(`${colors.bright}${colors.green}‚úÖ –ü–†–û–ë–õ–ï–ú –ù–ï –ù–ê–ô–î–ï–ù–û!${colors.reset}\n`);
    }
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log(`${colors.bright}${colors.blue}üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:${colors.reset}`);
    console.log(`   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã: ${colors.cyan}sm:, md:, lg:${colors.reset}`);
    console.log(`   ‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ ${colors.cyan}overflow-x-auto${colors.reset} –¥–ª—è —Ç–∞–±–ª–∏—Ü`);
    console.log(`   ‚Ä¢ –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ ${colors.cyan}max-w-${colors.reset} –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤`);
    console.log(`   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ${colors.cyan}ResponsiveTableWrapper${colors.reset} –¥–ª—è —Ç–∞–±–ª–∏—Ü`);
    console.log(`   ‚Ä¢ –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ —ç–∫—Ä–∞–Ω–∞—Ö –æ—Ç ${colors.cyan}320px${colors.reset}\n`);
    
    // –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    if (responsivePercent >= 90) {
      console.log(`${colors.bright}${colors.green}üéâ –û–¢–õ–ò–ß–ù–ê–Ø –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–¨!${colors.reset}`);
    } else if (responsivePercent >= 70) {
      console.log(`${colors.bright}${colors.yellow}‚ö†Ô∏è  –•–û–†–û–®–ê–Ø –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–¨, –ù–û –ï–°–¢–¨ –ú–ï–°–¢–û –î–õ–Ø –£–õ–£–ß–®–ï–ù–ò–ô${colors.reset}`);
    } else {
      console.log(`${colors.bright}${colors.red}üö® –¢–†–ï–ë–£–ï–¢–°–Ø –†–ê–ë–û–¢–ê –ù–ê–î –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–¨–Æ${colors.reset}`);
    }
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç
   */
  run() {
    const clientDir = path.join(process.cwd(), 'client', 'src');
    
    if (!fs.existsSync(clientDir)) {
      console.error(`${colors.red}–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è client/src –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${colors.reset}`);
      process.exit(1);
    }
    
    console.log(`${colors.bright}–ó–∞–ø—É—Å–∫ –∞—É–¥–∏—Ç–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏...${colors.reset}\n`);
    
    this.scanDirectory(clientDir);
    this.generateReport();
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
    return this.issues.length === 0 ? 0 : 1;
  }
}

// –ó–∞–ø—É—Å–∫ –∞—É–¥–∏—Ç–∞
const auditor = new ResponsivenessAuditor();
const exitCode = auditor.run();
process.exit(exitCode);