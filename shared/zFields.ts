/**
 * üîß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Å—Ö–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç—Ä–æ–∫
 *
 * –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –∫–æ–≥–¥–∞ HTML —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–¥–∞—é—Ç —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏,
 * –∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ö–µ–º—ã –æ–∂–∏–¥–∞—é—Ç —á–∏—Å–ª–∞. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞
 * —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ–± –æ—à–∏–±–∫–∞—Ö –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
 */

import { z } from "zod";

/**
 * –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞ –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π —Å –∞–≤—Ç–æ–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç—Ä–æ–∫
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç z.coerce.number() –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫ –≤ —á–∏—Å–ª–∞
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–∏ –∫–æ–≥–¥–∞ API –ø–æ–ª—É—á–∞–µ—Ç —á–∏—Å–ª–æ (1000) –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∏ ("1000")
 * –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã FIFO-–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏—è—Ö 0 –∏ -1
 */
const createNumberField = (fieldName: string = "–ü–æ–ª–µ") => {
  return z.coerce.number({
    errorMap: (issue, ctx) => {
      if (issue.code === z.ZodIssueCode.invalid_type) {
        return { message: `${fieldName} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º` };
      }
      return { message: `–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è ${fieldName}` };
    },
  });
};

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –¥–µ–Ω–µ–∂–Ω—ã—Ö –ø–æ–ª–µ–π (—Ü–µ–Ω—ã, —Å—Ç–æ–∏–º–æ—Å—Ç–∏)
 *
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ
 * –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–∑—É–º–Ω—ã–º –ø—Ä–µ–¥–µ–ª–æ–º
 */
export const zPrice = createNumberField("–¶–µ–Ω–∞")
  .refine((val) => val >= 0, "–¶–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π")
  .refine((val) => val <= 999999999.99, "–¶–µ–Ω–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è")
  .refine((val) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π (–º–∞–∫—Å–∏–º—É–º 2)
    const decimalPlaces = (val.toString().split(".")[1] || "").length;
    return decimalPlaces <= 2;
  }, "–¶–µ–Ω–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 2 –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π");

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –ø–æ–ª–µ–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ (—Ç–æ–≤–∞—Ä—ã, –æ—Å—Ç–∞—Ç–∫–∏)
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π, –≥–¥–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º
 * (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞, –ø—Ä–∏—Ö–æ–¥ —Ç–æ–≤–∞—Ä–∞, –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º)
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–ª—å—à–µ –Ω—É–ª—è
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥—Ä–æ–±–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ 3 –∑–Ω–∞–∫–æ–≤
 */
export const zQuantity = createNumberField("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
  .refine((val) => val > 0, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
  .refine((val) => val <= 999999, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ")
  .refine((val) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π (–º–∞–∫—Å–∏–º—É–º 3)
    const decimalPlaces = (val.toString().split(".")[1] || "").length;
    return decimalPlaces <= 3;
  }, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 3 –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π");

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –ø–æ–ª–µ–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω—É–ª–µ–≤—ã–º
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Å—Ç–∞—Ç–∫–æ–≤, —Ä–µ–∑–µ—Ä–≤–æ–≤, –Ω—É–ª–µ–≤—ã—Ö –≤–æ–∑–≤—Ä–∞—Ç–æ–≤, –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π,
 * –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–æ–∫ –≥–¥–µ –Ω–æ–ª—å - –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥—Ä–æ–±–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ 3 –∑–Ω–∞–∫–æ–≤
 */
export const zQuantityAllowZero = createNumberField("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
  .refine((val) => val >= 0, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")
  .refine((val) => val <= 999999, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ")
  .refine((val) => {
    const decimalPlaces = (val.toString().split(".")[1] || "").length;
    return decimalPlaces <= 3;
  }, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 3 –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π");

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏—è—Ö, –≤–æ–∑–≤—Ä–∞—Ç–∞—Ö, –¥–≤–∏–∂–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ –≤ –º–∏–Ω—É—Å,
 * —Å–∫–ª–∞–¥—Å–∫–∏—Ö –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞—Ö, –æ–ø–µ—Ä–∞—Ü–∏—è—Ö —Ä–∞—Å—Ö–æ–¥–∞
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞
 * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ª—é–±—ã–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ, –Ω–æ–ª—å)
 */
export const zQuantityCanBeNegative = createNumberField("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
  .refine((val) => Number.isInteger(val), "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º")
  .refine(
    (val) => val >= -999999 && val <= 999999,
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (-999999 –¥–æ 999999)"
  );

/**
 * –°—Ö–µ–º–∞ –¥–ª—è —Ü–µ–ª—ã—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤ (–∑–∞–∫–∞–∑—ã, —à—Ç—É—á–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã)
 */
export const zQuantityInteger = createNumberField("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
  .refine((val) => val > 0, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
  .refine((val) => val <= 999999, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ")
  .refine((val) => Number.isInteger(val), "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º");

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö –ø–æ–ª–µ–π (—Å–∫–∏–¥–∫–∏, –Ω–∞—Ü–µ–Ω–∫–∏)
 *
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞
 * –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 0 –¥–æ 100 –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
 */
export const zPercent = createNumberField("–ü—Ä–æ—Ü–µ–Ω—Ç")
  .refine((val) => val >= 0, "–ü—Ä–æ—Ü–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")
  .refine((val) => val <= 100, "–ü—Ä–æ—Ü–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 100")
  .refine((val) => {
    const decimalPlaces = (val.toString().split(".")[1] || "").length;
    return decimalPlaces <= 2;
  }, "–ü—Ä–æ—Ü–µ–Ω—Ç –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 2 –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π");

/**
 * –°—Ö–µ–º–∞ –¥–ª—è ID –ø–æ–ª–µ–π
 *
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ ID –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
 */
export const zId = createNumberField("ID")
  .refine((val) => val > 0, "ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
  .refine((val) => Number.isInteger(val), "ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º")
  .refine((val) => val <= 2147483647, "ID —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π"); // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ INTEGER –≤ PostgreSQL

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –≤–µ—Å–∞ —Ç–æ–≤–∞—Ä–æ–≤
 *
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–∞
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥—Ä–æ–±–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏—è
 */
export const zWeight = createNumberField("–í–µ—Å")
  .refine((val) => val >= 0, "–í–µ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")
  .refine((val) => val <= 999999, "–í–µ—Å —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π")
  .refine((val) => {
    const decimalPlaces = (val.toString().split(".")[1] || "").length;
    return decimalPlaces <= 3;
  }, "–í–µ—Å –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 3 –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π");

/**
 * –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ö–µ–º
 *
 * –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–æ–≥–¥–∞ –ø–æ–ª–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ undefined
 */
export const zPriceOptional = zPrice.optional();
export const zQuantityOptional = zQuantity.optional();
export const zPercentOptional = zPercent.optional();
export const zWeightOptional = zWeight.optional();
export const zIdOptional = zId.optional();

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏–π —Å—É—â–Ω–æ—Å—Ç–µ–π (–¥–æ–∫—É–º–µ–Ω—Ç—ã, –∑–∞–∫–∞–∑—ã, –ø—Ä–æ–¥—É–∫—Ç—ã)
 *
 * –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –¥–ª–∏–Ω—ã –∏ –æ–±—Ä–µ–∑–∫–æ–π –ø—Ä–æ–±–µ–ª–æ–≤
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –≤—Å–µ—Ö —Å—É—â–Ω–æ—Å—Ç—è—Ö —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∞–≤–∏–ª
 */
export const zName = z
  .string()
  .trim()
  .min(1, "–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ")
  .max(255, "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 255 —Å–∏–º–≤–æ–ª–æ–≤");

export const zNameOptional = zName.optional();

/**
 * –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
 */
export const zDocumentName = z
  .string()
  .max(255, "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 255 —Å–∏–º–≤–æ–ª–æ–≤")
  .trim()
  .optional()
  .default("");

/**
 * –ü–æ–ª–µ –¥–ª—è –ø—Ä–∏–º–µ—á–∞–Ω–∏–π –∏ –∑–∞–º–µ—Ç–æ–∫
 * –ú–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
 */
export const zNotes = z
  .string()
  .max(1000, "–ü—Ä–∏–º–µ—á–∞–Ω–∏—è –Ω–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–µ–≤—ã—à–∞—Ç—å 1000 —Å–∏–º–≤–æ–ª–æ–≤")
  .trim()
  .optional()
  .transform((val) => val || undefined);

/**
 * –ü–æ–ª–µ –¥–ª—è –¥–∞—Ç –≤ —Å—Ç—Ä–æ–∫–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∞ –≤ –≤–∞–ª–∏–¥–Ω—É—é –¥–∞—Ç—É
 */
export const zDate = z
  .string()
  .refine((val) => !isNaN(Date.parse(val)), "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞")
  .optional();

/**
 * –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ - —Ç–æ–ª—å–∫–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
 */
export const zOrderStatus = z.enum(["–ù–æ–≤—ã–π", "–í —Ä–∞–±–æ—Ç–µ", "–í—ã–ø–æ–ª–Ω–µ–Ω", "–û—Ç–º–µ–Ω–µ–Ω"], {
  errorMap: () => ({ message: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞" }),
});

export const zOrderStatusOptional = zOrderStatus.optional();

/**
 * –°—Ç–∞—Ç—É—Å –æ—Ç–≥—Ä—É–∑–∫–∏ - —Ç–æ–ª—å–∫–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
 */
export const zShipmentStatus = z.enum(["draft", "shipped"], {
  errorMap: () => ({ message: "–°—Ç–∞—Ç—É—Å –æ—Ç–≥—Ä—É–∑–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'draft' –∏–ª–∏ 'shipped'" }),
});

export const zShipmentStatusOptional = zShipmentStatus.optional();

/**
 * ID –≤ —Å—Ç—Ä–æ–∫–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–¥–ª—è URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ –ø–æ—Å–ª–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 */
export const zIdString = z
  .string()
  .regex(/^\d+$/, "ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã")
  .transform(Number)
  .refine(
    (val) => val > 0 && val <= Number.MAX_SAFE_INTEGER,
    "ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º"
  );

// –í—Å–µ —Å—Ç–∞—Ä—ã–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ —Å—Ö–µ–º—ã —É–¥–∞–ª–µ–Ω—ã - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—è –≤—ã—à–µ

/**
 * –¢–∏–ø—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ TypeScript
 */
export type Price = z.infer<typeof zPrice>;
export type Quantity = z.infer<typeof zQuantity>;
export type QuantityAllowZero = z.infer<typeof zQuantityAllowZero>;
export type QuantityCanBeNegative = z.infer<typeof zQuantityCanBeNegative>;
export type Percent = z.infer<typeof zPercent>;
export type Weight = z.infer<typeof zWeight>;
export type Name = z.infer<typeof zName>;

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export const zUsername = z
  .string()
  .trim()
  .min(1, "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ")
  .max(50, "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤");

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –ø–∞—Ä–æ–ª–µ–π
 */
export const zPassword = z
  .string()
  .min(1, "–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")
  .min(4, "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 4 —Å–∏–º–≤–æ–ª–∞");

/**
 * –°—Ö–µ–º–∞ –¥–ª—è —à—Ç—Ä–∏—Ö-–∫–æ–¥–æ–≤
 */
export const zBarcode = z
  .string()
  .max(50, "–®—Ç—Ä–∏—Ö-–∫–æ–¥ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤")
  .optional()
  .or(z.literal(""))
  .transform(val => val === "" ? undefined : val);

/**
 * –°—Ö–µ–º–∞ –¥–ª—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
export const zImageUrl = z
  .string()
  .max(500, "URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 500 —Å–∏–º–≤–æ–ª–æ–≤")
  .optional()
  .or(z.literal(""))
  .transform(val => val === "" ? undefined : val);

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –≤–µ–±-—Å–∞–π—Ç–æ–≤
 */
export const zWebsite = z
  .string()
  .optional()
  .transform((val) => val?.trim() || undefined)
  .refine(
    (val) => !val || val === undefined || val.startsWith("http"),
    "–í–µ–±—Å–∞–π—Ç –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http –∏–ª–∏ https"
  );



/**
 * –°—Ö–µ–º–∞ –¥–ª—è –∞–¥—Ä–µ—Å–æ–≤
 */
export const zAddress = z
  .string()
  .optional()
  .transform((val) => val?.trim() || undefined)
  .refine((val) => !val || val.length <= 500, "–ê–¥—Ä–µ—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 500 —Å–∏–º–≤–æ–ª–æ–≤");

/**
 * –°—Ö–µ–º–∞ –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ (SKU)
 */
export const zSku = z
  .string()
  .trim()
  .min(1, "–ê—Ä—Ç–∏–∫—É–ª –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")
  .max(100, "–ê—Ä—Ç–∏–∫—É–ª –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤")
  .regex(
    /^[A-Za-z0-9_-]+$/,
    "–ê—Ä—Ç–∏–∫—É–ª –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –¥–µ—Ñ–∏—Å—ã –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è"
  );

/**
 * –°—Ö–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –º–∞—Å—Å–∏–≤–æ–≤ ID –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–≥—Ä—É–∑–æ–∫
 */
export const shipmentIdsSchema = z.object({
  ids: z.array(zId).min(1, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –æ—Ç–≥—Ä—É–∑–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"),
});
