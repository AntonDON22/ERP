#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ ERP..."
echo ""

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ (–∏—â–µ–º package.json)
PROJECT_ROOT=""
if [ -f "package.json" ]; then
    PROJECT_ROOT="."
elif [ -f "../package.json" ]; then
    PROJECT_ROOT=".."
elif [ -f "../../package.json" ]; then
    PROJECT_ROOT="../.."
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ (package.json)"
    exit 1
fi

echo "üìÇ –ö–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_ROOT"
echo ""

# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
CRITICAL_ISSUES=0
WARNING_ISSUES=0
STYLELINT_ISSUES=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–æ–≤
check_file() {
    local file="$1"
    local description="$2"
    
    if [ -f "$file" ]; then
        echo "‚úÖ $description: –Ω–∞–π–¥–µ–Ω"
        return 0
    else
        echo "‚ùå $description: –ù–ï –ù–ê–ô–î–ï–ù"
        ((CRITICAL_ISSUES++))
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞
check_content() {
    local file="$1"
    local pattern="$2"
    local description="$3"
    local severity="$4"
    
    if [ -f "$file" ] && grep -q "$pattern" "$file"; then
        echo "‚úÖ $description: OK"
        return 0
    else
        echo "‚ö†Ô∏è $description: –ù–ï –ù–ê–ô–î–ï–ù–û"
        if [ "$severity" = "critical" ]; then
            ((CRITICAL_ISSUES++))
        else
            ((WARNING_ISSUES++))
        fi
        return 1
    fi
}

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ 
check_file "$PROJECT_ROOT/client/src/components/DataTable.tsx" "DataTable –∫–æ–º–ø–æ–Ω–µ–Ω—Ç"
check_file "$PROJECT_ROOT/client/src/components/Navigation.tsx" "Navigation –∫–æ–º–ø–æ–Ω–µ–Ω—Ç"  
check_file "$PROJECT_ROOT/client/src/pages/ResponsiveTest.tsx" "–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏"
check_file "$PROJECT_ROOT/.stylelintrc.json" "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Stylelint"

echo ""
echo "üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ DataTable –∏ ResponsiveTableWrapper
if [ -f "$PROJECT_ROOT/client/src/components/ui/responsive-table-wrapper.tsx" ] && grep -q "overflow-x-auto" "$PROJECT_ROOT/client/src/components/ui/responsive-table-wrapper.tsx"; then
    echo "‚úÖ DataTable: –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞: OK (—á–µ—Ä–µ–∑ ResponsiveTableWrapper)"
elif grep -q "overflow-x-auto" "$PROJECT_ROOT/client/src/components/DataTable.tsx"; then
    echo "‚úÖ DataTable: –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞: OK (–Ω–∞–ø—Ä—è–º—É—é)"
else
    echo "‚ùå DataTable: –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞: –ù–ï –ù–ê–ô–î–ï–ù–û"
    ((CRITICAL_ISSUES++))
fi

check_content "$PROJECT_ROOT/client/src/components/DataTable.tsx" "sm:" "DataTable: –º–æ–±–∏–ª—å–Ω—ã–µ breakpoints" "warning"
check_content "$PROJECT_ROOT/client/src/components/DataTable.tsx" "md:" "DataTable: –ø–ª–∞–Ω—à–µ—Ç–Ω—ã–µ breakpoints" "warning"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
check_content "$PROJECT_ROOT/client/src/components/Navigation.tsx" "md:hidden" "Navigation: –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é" "critical"
check_content "$PROJECT_ROOT/client/src/components/Navigation.tsx" "hamburger\|menu-button\|‚ò∞" "Navigation: –∫–Ω–æ–ø–∫–∞ –º–µ–Ω—é" "warning"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
check_content "$PROJECT_ROOT/client/src/pages/Dashboard.tsx" "sm:\|md:\|lg:" "Dashboard: –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã" "warning"

echo ""
echo "üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ Stylelint..."

# –ó–∞–ø—É—Å–∫ Stylelint
if command -v npx &> /dev/null; then
    STYLELINT_OUTPUT=$(npx stylelint "**/*.css" "**/*.tsx" --formatter json --ignore-path .gitignore 2>/dev/null)
    if [ $? -eq 0 ]; then
        STYLELINT_COUNT=$(echo "$STYLELINT_OUTPUT" | jq -r '.[].warnings | length' 2>/dev/null | awk '{sum += $1} END {print sum}')
        if [ -z "$STYLELINT_COUNT" ] || [ "$STYLELINT_COUNT" = "null" ]; then
            STYLELINT_COUNT=0
        fi
        STYLELINT_ISSUES=$STYLELINT_COUNT
        echo "‚úÖ Stylelint: $STYLELINT_ISSUES –ø—Ä–æ–±–ª–µ–º –Ω–∞–π–¥–µ–Ω–æ"
    else
        echo "‚ö†Ô∏è Stylelint: –æ—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
        ((WARNING_ISSUES++))
    fi
else
    echo "‚ö†Ô∏è npx –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º Stylelint"
    ((WARNING_ISSUES++))
fi

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ —ç–∫—Ä–∞–Ω–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ breakpoints –≤ CSS/Tailwind
if [ -f "$PROJECT_ROOT/tailwind.config.ts" ]; then
    if grep -q "screens" "$PROJECT_ROOT/tailwind.config.ts"; then
        echo "‚úÖ Tailwind breakpoints: –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    else
        echo "‚ö†Ô∏è Tailwind breakpoints: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ"
        ((WARNING_ISSUES++))
    fi
else
    echo "‚ùå Tailwind config –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((CRITICAL_ISSUES++))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–æ–±–∏–ª—å–Ω—ã—Ö viewport
if [ -f "$PROJECT_ROOT/client/index.html" ]; then
    if grep -q "viewport" "$PROJECT_ROOT/client/index.html"; then
        echo "‚úÖ Viewport meta: –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        echo "‚ùå Viewport meta: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        ((CRITICAL_ISSUES++))
    fi
fi

echo ""
echo "========================================="
echo "üìã –û–¢–ß–ï–¢ –û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–ò"
echo "========================================="
echo ""
echo "üìä –°–í–û–î–ö–ê:"
echo "   –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã: $CRITICAL_ISSUES"
echo "   –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNING_ISSUES"
echo "   –ü—Ä–æ–±–ª–µ–º—ã Stylelint: $STYLELINT_ISSUES"
echo ""

if [ $CRITICAL_ISSUES -gt 0 ]; then
    echo "üö® –ö–†–ò–¢–ò–ß–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:"
    echo "   –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –Ω–∞—Ä—É—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"
    echo "   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º"
    echo ""
fi

if [ $WARNING_ISSUES -gt 0 ]; then
    echo "‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:"
    echo "   –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç"
    echo "   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏"
    echo ""
fi

echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
echo "   1. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ —ç–∫—Ä–∞–Ω–∞—Ö —à–∏—Ä–∏–Ω–æ–π 320px, 375px, 768px, 1024px"
echo "   2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ overflow-x-auto –¥–ª—è —à–∏—Ä–æ–∫–∏—Ö —Ç–∞–±–ª–∏—Ü"
echo "   3. –î–æ–±–∞–≤–ª—è–π—Ç–µ –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —ç–∫—Ä–∞–Ω–æ–≤ < 768px"
echo "   4. –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ responsive –∫–ª–∞—Å—Å—ã: sm:, md:, lg:"

if [ $STYLELINT_ISSUES -gt 0 ]; then
    echo "   5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npx stylelint \"**/*.css\" \"**/*.tsx\" --fix"
fi

echo ""
echo "üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò:"
echo "   - –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5000/responsive-test"
echo "   - –í–∫–ª—é—á–∏—Ç–µ —Ä–µ–∂–∏–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ DevTools (F12)"
echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–∞—Ö —ç–∫—Ä–∞–Ω–∞"
echo ""

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞
REPORT_FILE="test_results_$(date +%Y-%m-%dT%H-%M-%S-%3NZ).log"
{
    echo "========================================="
    echo "–û–¢–ß–ï–¢ –û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–ò"
    echo "–î–∞—Ç–∞: $(date)"
    echo "========================================="
    echo ""
    echo "–ö—Ä–∏—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã: $CRITICAL_ISSUES"
    echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNING_ISSUES"
    echo "–ü—Ä–æ–±–ª–µ–º—ã Stylelint: $STYLELINT_ISSUES"
    echo ""
    echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: $([ $CRITICAL_ISSUES -eq 0 ] && echo "–£–°–ü–ï–®–ù–û" || echo "–¢–†–ï–ë–£–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")"
} > "$REPORT_FILE"

echo "üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $REPORT_FILE"
echo ""

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã—Ö–æ–¥–∞
if [ $CRITICAL_ISSUES -eq 0 ]; then
    echo "‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ü–†–û–ô–î–ï–ù"
    echo "‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $(date)"
    exit 0
else
    echo "‚ùå –°–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ù–ï –ü–†–û–ô–î–ï–ù"
    echo "‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $(date)"
    exit 1
fi