Техническое задание для Replit
Тема: Поддержка отрицательных значений количества в схемах валидации ERP-системы

Цель: Добавить возможность валидировать отрицательные значения количества (например, при списании, возвратах, складских корректировках), не затрагивая текущие схемы, которые используют zQuantity (строго положительное значение). Сохранить централизованную архитектуру валидации через файл zFields.ts.

Задачи:
	1.	В файл shared/zFields.ts добавить новое поле zQuantityCanBeNegative. Это поле должно валидировать числовое значение, включая отрицательные значения, ноль и положительные числа. Оно должно быть построено на основе z.coerce.number() и проверять, что значение является целым числом.
	2.	Оставить существующее поле zQuantity без изменений — оно должно по-прежнему требовать положительные значения больше нуля и использоваться для операций прихода, заказов, ввода пользователем.
	3.	Добавить краткий комментарий к каждому из этих полей в zFields.ts:
– zQuantity: используется для операций, где количество должно быть положительным (например, создание заказа)
– zQuantityCanBeNegative: используется при списаниях, возвратах, движении товара в минус
	4.	В схемах, где необходимо использовать отрицательное количество (например, insertWriteOffSchema, корректировки, возвраты), заменить поле zQuantity на zQuantityCanBeNegative, если это соответствует бизнес-логике.
	5.	При необходимости создать zQuantityAllowZero (значения ≥ 0), если в отдельных местах нужно допустить ноль, но не минус. Например: нулевые возвраты, начальные значения, неактивные строки.
	6.	Обновить документацию по схемам (SCHEMA_GUIDE.md или README), добавив раздел про типы количеств:
– zQuantity: строго больше 0
– zQuantityAllowZero: 0 и выше
– zQuantityCanBeNegative: любое целое число
Добавить описание, где и в каких случаях они применяются.
	7.	Убедиться, что все новые поля покрыты юнит-тестами (в tests/zFields или tests/shared). Протестировать zQuantityCanBeNegative на положительных, отрицательных, нулевых, строковых и пустых значениях.

Ожидаемый результат:

Система валидации поддерживает все три возможных бизнес-сценария:
– стандартные операции с товарами используют zQuantity
– списания, возвраты и минусовые корректировки используют zQuantityCanBeNegative
– тесты и нестрогие формы используют zQuantityAllowZero

Все поля централизованы в zFields.ts, повторные ошибки с несовпадением типов и отрицательными значениями больше не возникают. Тесты проходят, логика прозрачна.