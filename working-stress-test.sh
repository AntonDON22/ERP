#!/bin/bash

echo "üöÄ –°–¢–†–ï–°–°-–¢–ï–°–¢ ERP –°–ò–°–¢–ï–ú–´ –° –î–û–ö–£–ú–ï–ù–¢–û–û–ë–û–†–û–¢–û–ú"
echo "============================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ timestamp
get_timestamp() {
    date +%s%3N
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ API
measure_api_time() {
    local endpoint=$1
    local method=${2:-GET}
    local data=${3:-""}
    
    if [ "$method" = "GET" ]; then
        response_time=$(curl -s -w "%{time_total}" -o /dev/null "http://localhost:5000/api$endpoint")
    else
        response_time=$(curl -s -w "%{time_total}" -o /dev/null -X "$method" -H "Content-Type: application/json" -d "$data" "http://localhost:5000/api$endpoint")
    fi
    
    echo "$response_time" | awk '{printf "%.0f", $1 * 1000}'
}

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
RUN_ID=$(get_timestamp)
echo "üîç ID –∑–∞–ø—É—Å–∫–∞: $RUN_ID"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
if ! curl -s http://localhost:5000/api/products > /dev/null; then
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi
echo "‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"

# 1. –°–û–ó–î–ê–ù–ò–ï –ë–ê–ó–û–í–´–• –î–ê–ù–ù–´–•
echo ""
echo "üìä –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•"
echo "==========================="

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ SKU
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ 10 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤..."
created_products=0
product_ids=()

for i in {1..10}; do
    unique_sku="STR${RUN_ID}${i}"
    product_data="{\"name\":\"–°—Ç—Ä–µ—Å—Å–¢–µ—Å—Ç-${RUN_ID}-${i}\",\"sku\":\"${unique_sku}\",\"price\":\"${i}00\",\"purchasePrice\":\"$((i*50))\"}"
    
    response=$(curl -s -X POST -H "Content-Type: application/json" -d "$product_data" "http://localhost:5000/api/products")
    
    if echo "$response" | grep -q '"id"'; then
        product_id=$(echo "$response" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        product_ids+=($product_id)
        ((created_products++))
        echo "   ‚úÖ –¢–æ–≤–∞—Ä $i: ID=$product_id"
    else
        echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ $i: $response"
    fi
done

echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: $created_products/10"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–ª–∞–¥–æ–≤
echo "üè¢ –°–æ–∑–¥–∞–Ω–∏–µ 3 —Å–∫–ª–∞–¥–æ–≤..."
created_warehouses=0
warehouse_ids=()

for i in {1..3}; do
    warehouse_data="{\"name\":\"–°—Ç—Ä–µ—Å—Å–°–∫–ª–∞–¥-${RUN_ID}-${i}\",\"address\":\"–ê–¥—Ä–µ—Å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫–ª–∞–¥–∞ ${i}\"}"
    
    response=$(curl -s -X POST -H "Content-Type: application/json" -d "$warehouse_data" "http://localhost:5000/api/warehouses")
    
    if echo "$response" | grep -q '"id"'; then
        warehouse_id=$(echo "$response" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        warehouse_ids+=($warehouse_id)
        ((created_warehouses++))
        echo "   ‚úÖ –°–∫–ª–∞–¥ $i: ID=$warehouse_id"
    fi
done

echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–∫–ª–∞–¥–æ–≤: $created_warehouses/3"

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤
echo "üë• –°–æ–∑–¥–∞–Ω–∏–µ 5 –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤..."
created_contractors=0
contractor_ids=()

for i in {1..5}; do
    contractor_data="{\"name\":\"–°—Ç—Ä–µ—Å—Å–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç-${RUN_ID}-${i}\",\"website\":\"https://stress${RUN_ID}${i}.test.com\"}"
    
    response=$(curl -s -X POST -H "Content-Type: application/json" -d "$contractor_data" "http://localhost:5000/api/contractors")
    
    if echo "$response" | grep -q '"id"'; then
        contractor_id=$(echo "$response" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        contractor_ids+=($contractor_id)
        ((created_contractors++))
        echo "   ‚úÖ –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç $i: ID=$contractor_id"
    fi
done

echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤: $created_contractors/5"

# 2. –°–û–ó–î–ê–ù–ò–ï –î–û–ö–£–ú–ï–ù–¢–û–í
echo ""
echo "üìÑ –¢–ï–°–¢ –î–û–ö–£–ú–ï–ù–¢–û–û–ë–û–†–û–¢–ê"
echo "======================="

if [ ${#product_ids[@]} -gt 0 ] && [ ${#warehouse_ids[@]} -gt 0 ]; then
    echo "üìã –°–æ–∑–¥–∞–Ω–∏–µ 5 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏—Ö–æ–¥–æ–≤–∞–Ω–∏—è..."
    created_documents=0
    document_creation_start=$(get_timestamp)
    
    for i in {1..5}; do
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —Ç–æ–≤–∞—Ä –∏ —Å–∫–ª–∞–¥
        product_id=${product_ids[$((i % ${#product_ids[@]}))]}
        warehouse_id=${warehouse_ids[$((i % ${#warehouse_ids[@]}))]}
        quantity=$((i + 2))
        price=$((i * 100 + 100))
        
        document_data="{
            \"type\":\"income\",
            \"status\":\"posted\",
            \"warehouseId\":$warehouse_id,
            \"items\":[{
                \"productId\":$product_id,
                \"quantity\":$quantity,
                \"price\":\"$price\"
            }]
        }"
        
        response=$(curl -s -X POST -H "Content-Type: application/json" -d "$document_data" "http://localhost:5000/api/documents/create")
        
        if echo "$response" | grep -q '"id"'; then
            doc_id=$(echo "$response" | grep -o '"id":[0-9]*' | cut -d':' -f2)
            ((created_documents++))
            echo "   ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç $i: ID=$doc_id (—Ç–æ–≤–∞—Ä=$product_id, —Å–∫–ª–∞–¥=$warehouse_id, –∫–æ–ª-–≤–æ=$quantity)"
        else
            echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ $i: $response"
        fi
    done
    
    document_creation_time=$(($(get_timestamp) - document_creation_start))
    echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏—Ö–æ–¥–æ–≤–∞–Ω–∏—è: $created_documents/5 –∑–∞ ${document_creation_time}ms"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∞–Ω–∏—è
    echo "üìã –°–æ–∑–¥–∞–Ω–∏–µ 3 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∞–Ω–∏—è..."
    writeoff_documents=0
    writeoff_start=$(get_timestamp)
    
    for i in {1..3}; do
        product_id=${product_ids[$((i % ${#product_ids[@]}))]}
        warehouse_id=${warehouse_ids[$((i % ${#warehouse_ids[@]}))]}
        
        writeoff_data="{
            \"type\":\"outcome\",
            \"status\":\"posted\",
            \"warehouseId\":$warehouse_id,
            \"items\":[{
                \"productId\":$product_id,
                \"quantity\":1
            }]
        }"
        
        response=$(curl -s -X POST -H "Content-Type: application/json" -d "$writeoff_data" "http://localhost:5000/api/documents/create")
        
        if echo "$response" | grep -q '"id"'; then
            doc_id=$(echo "$response" | grep -o '"id":[0-9]*' | cut -d':' -f2)
            ((writeoff_documents++))
            echo "   ‚úÖ –°–ø–∏—Å–∞–Ω–∏–µ $i: ID=$doc_id (—Ç–æ–≤–∞—Ä=$product_id, —Å–∫–ª–∞–¥=$warehouse_id)"
        else
            echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∞–Ω–∏—è $i: $response"
        fi
    done
    
    writeoff_creation_time=$(($(get_timestamp) - writeoff_start))
    echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∞–Ω–∏—è: $writeoff_documents/3 –∑–∞ ${writeoff_creation_time}ms"
else
    echo "‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞"
fi

# 3. –°–û–ó–î–ê–ù–ò–ï –ó–ê–ö–ê–ó–û–í
echo ""
echo "üõí –¢–ï–°–¢ –ó–ê–ö–ê–ó–û–í"
echo "=============="

if [ ${#product_ids[@]} -gt 0 ] && [ ${#contractor_ids[@]} -gt 0 ] && [ ${#warehouse_ids[@]} -gt 0 ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ 4 –∑–∞–∫–∞–∑–æ–≤ –±–µ–∑ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è..."
    created_orders=0
    orders_creation_start=$(get_timestamp)
    
    for i in {1..4}; do
        product_id=${product_ids[$((i % ${#product_ids[@]}))]}
        contractor_id=${contractor_ids[$((i % ${#contractor_ids[@]}))]}
        warehouse_id=${warehouse_ids[$((i % ${#warehouse_ids[@]}))]}
        quantity=$((i + 1))
        price=$((i * 150 + 200))
        
        order_data="{
            \"customerId\":$contractor_id,
            \"warehouseId\":$warehouse_id,
            \"status\":\"–ù–æ–≤—ã–π\",
            \"isReserved\":false,
            \"items\":[{
                \"productId\":$product_id,
                \"quantity\":$quantity,
                \"price\":\"$price\"
            }]
        }"
        
        response=$(curl -s -X POST -H "Content-Type: application/json" -d "$order_data" "http://localhost:5000/api/orders/create")
        
        if echo "$response" | grep -q '"id"'; then
            order_id=$(echo "$response" | grep -o '"id":[0-9]*' | cut -d':' -f2)
            ((created_orders++))
            echo "   ‚úÖ –ó–∞–∫–∞–∑ $i: ID=$order_id (—Ç–æ–≤–∞—Ä=$product_id, –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç=$contractor_id, –∫–æ–ª-–≤–æ=$quantity)"
        else
            echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ $i: $response"
        fi
    done
    
    orders_creation_time=$(($(get_timestamp) - orders_creation_start))
    echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ –∑–∞–∫–∞–∑–æ–≤: $created_orders/4 –∑–∞ ${orders_creation_time}ms"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ 3 –∑–∞–∫–∞–∑–æ–≤ —Å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ–º..."
    reserved_orders=0
    reserved_start=$(get_timestamp)
    
    for i in {1..3}; do
        product_id=${product_ids[$((i % ${#product_ids[@]}))]}
        contractor_id=${contractor_ids[$((i % ${#contractor_ids[@]}))]}
        warehouse_id=${warehouse_ids[$((i % ${#warehouse_ids[@]}))]}
        
        reserved_order_data="{
            \"customerId\":$contractor_id,
            \"warehouseId\":$warehouse_id,
            \"status\":\"–ù–æ–≤—ã–π\",
            \"isReserved\":true,
            \"items\":[{
                \"productId\":$product_id,
                \"quantity\":1,
                \"price\":\"$((i * 200 + 300))\"
            }]
        }"
        
        response=$(curl -s -X POST -H "Content-Type: application/json" -d "$reserved_order_data" "http://localhost:5000/api/orders/create")
        
        if echo "$response" | grep -q '"id"'; then
            order_id=$(echo "$response" | grep -o '"id":[0-9]*' | cut -d':' -f2)
            ((reserved_orders++))
            echo "   ‚úÖ –†–µ–∑–µ—Ä–≤ $i: ID=$order_id (—Ç–æ–≤–∞—Ä=$product_id, —Ä–µ–∑–µ—Ä–≤=1)"
        else
            echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–∞ $i: $response"
        fi
    done
    
    reserved_creation_time=$(($(get_timestamp) - reserved_start))
    echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ –∑–∞–∫–∞–∑–æ–≤ —Å —Ä–µ–∑–µ—Ä–≤–æ–º: $reserved_orders/3 –∑–∞ ${reserved_creation_time}ms"
else
    echo "‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–∫–∞–∑–æ–≤"
fi

# 4. –ü–†–û–í–ï–†–ö–ê –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´
echo ""
echo "üìä –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –ü–û–°–õ–ï –ù–ê–ì–†–£–ó–ö–ò"
echo "======================================="

# –ò–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –≤—Å–µ—Ö API
products_time=$(measure_api_time "/products")
documents_time=$(measure_api_time "/documents")
orders_time=$(measure_api_time "/orders")
inventory_time=$(measure_api_time "/inventory")
inventory_avail_time=$(measure_api_time "/inventory/availability")

echo "üì¶ /api/products:              ${products_time}ms"
echo "üìÑ /api/documents:             ${documents_time}ms"
echo "üõí /api/orders:                ${orders_time}ms"
echo "üìä /api/inventory:             ${inventory_time}ms"
echo "üîÑ /api/inventory/availability: ${inventory_avail_time}ms"

total_api_time=$((products_time + documents_time + orders_time + inventory_time + inventory_avail_time))
avg_api_time=$((total_api_time / 5))

echo "üìä –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è API: ${avg_api_time}ms"

# 5. –ü–†–û–í–ï–†–ö–ê –û–°–¢–ê–¢–ö–û–í
echo ""
echo "üíæ –ü–†–û–í–ï–†–ö–ê –û–°–¢–ê–¢–ö–û–í –ò –†–ï–ó–ï–†–í–û–í"
echo "=============================="

# –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏
inventory_response=$(curl -s "http://localhost:5000/api/inventory/availability")
total_items=$(echo "$inventory_response" | grep -o '"id":[0-9]*' | wc -l)
echo "üìä –¢–æ–≤–∞—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ –æ—Å—Ç–∞—Ç–∫–æ–≤: $total_items"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã
metrics_response=$(curl -s "http://localhost:5000/api/metrics")
cache_hit_rate=$(echo "$metrics_response" | grep -o '"cacheHitRate":[0-9.]*' | cut -d':' -f2)
system_avg_time=$(echo "$metrics_response" | grep -o '"averageResponseTime":[0-9.]*' | cut -d':' -f2)

echo "üíæ Cache Hit Rate: ${cache_hit_rate}%"
echo "‚è±Ô∏è –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: ${system_avg_time}ms"

# 6. –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
echo ""
echo "üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –°–¢–†–ï–°–°-–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "===================================="
echo "üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–û–ó–î–ê–ù–ò–Ø –î–ê–ù–ù–´–•:"
echo "   ‚úÖ –¢–æ–≤–∞—Ä—ã: $created_products/10"
echo "   ‚úÖ –°–∫–ª–∞–¥—ã: $created_warehouses/3" 
echo "   ‚úÖ –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã: $created_contractors/5"
echo "   ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã –ø—Ä–∏—Ö–æ–¥–æ–≤–∞–Ω–∏—è: $created_documents/5"
echo "   ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∞–Ω–∏—è: $writeoff_documents/3"
echo "   ‚úÖ –ó–∞–∫–∞–∑—ã –æ–±—ã—á–Ω—ã–µ: $created_orders/4"
echo "   ‚úÖ –ó–∞–∫–∞–∑—ã —Å —Ä–µ–∑–µ—Ä–≤–æ–º: $reserved_orders/3"

total_created=$((created_products + created_warehouses + created_contractors + created_documents + writeoff_documents + created_orders + reserved_orders))
echo ""
echo "üìä –í–°–ï–ì–û –°–û–ó–î–ê–ù–û –ó–ê–ü–ò–°–ï–ô: $total_created"

echo ""
echo "‚è±Ô∏è –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨:"
if [ -n "$document_creation_time" ]; then
    echo "   üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã –ø—Ä–∏—Ö–æ–¥–æ–≤–∞–Ω–∏—è: ${document_creation_time}ms"
fi
if [ -n "$writeoff_creation_time" ]; then
    echo "   üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∞–Ω–∏—è: ${writeoff_creation_time}ms"
fi
if [ -n "$orders_creation_time" ]; then
    echo "   üõí –ó–∞–∫–∞–∑—ã –æ–±—ã—á–Ω—ã–µ: ${orders_creation_time}ms"
fi
if [ -n "$reserved_creation_time" ]; then
    echo "   üõí –ó–∞–∫–∞–∑—ã —Å —Ä–µ–∑–µ—Ä–≤–æ–º: ${reserved_creation_time}ms"
fi
echo "   üìä –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è API: ${avg_api_time}ms"
echo "   üíæ Cache Hit Rate: ${cache_hit_rate}%"

# –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
if [ "$total_created" -ge 25 ] && [ "$avg_api_time" -lt 150 ]; then
    echo ""
    echo "üü¢ –ü–†–ï–í–û–°–•–û–î–ù–û! –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–µ—Ä–∂–∞–ª–∞ –ø–æ–ª–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É"
    echo "   ‚úÖ –°–æ–∑–¥–∞–Ω–æ $total_created –∑–∞–ø–∏—Å–µ–π"
    echo "   ‚úÖ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "   ‚úÖ –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    echo "   ‚úÖ API –æ—Å—Ç–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä—ã–º –ø–æ–¥ –Ω–∞–≥—Ä—É–∑–∫–æ–π"
    echo "   ‚úÖ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ"
elif [ "$total_created" -ge 20 ] && [ "$avg_api_time" -lt 200 ]; then
    echo ""
    echo "üü° –•–û–†–û–®–û: –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞–±–∏–ª—å–Ω–∞ –ø–æ–¥ –Ω–∞–≥—Ä—É–∑–∫–æ–π"
else
    echo ""
    echo "üî¥ –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥ –Ω–∞–≥—Ä—É–∑–∫–æ–π"
fi

echo ""
echo "‚úÖ –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ ERP –∑–∞–≤–µ—Ä—à–µ–Ω"
echo "üöÄ ID —Ç–µ—Å—Ç–∞: $RUN_ID"