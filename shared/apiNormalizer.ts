/**
 * üîß –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è API
 * 
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –ø–æ–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç API
 * –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
 */

/**
 * –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–ª—è API –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
 */
export interface NormalizedInventoryItem {
  id: number;
  name: string;
  quantity: number;
  reserved?: number;
  available?: number;
}

/**
 * –ü–æ–ª—è –∏–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –∏–ª–∏ SQL –∑–∞–ø—Ä–æ—Å–æ–≤
 */
interface RawInventoryItem {
  // –í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–ª–µ–π ID
  id?: number;
  product_id?: number;
  
  // –í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–ª–µ–π –Ω–∞–∑–≤–∞–Ω–∏—è
  name?: string;
  product_name?: string;
  
  // –í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π
  quantity?: string | number;
  total_quantity?: string | number;
  
  // –ü–æ–ª—è —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
  reserved?: string | number;
  reserved_quantity?: string | number;
  
  // –ü–æ–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
  available?: string | number;
  available_quantity?: string | number;
}

/**
 * –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
 * 
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –ª—é–±—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î –≤ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π API —Ñ–æ—Ä–º–∞—Ç
 */
export function normalizeInventoryItem(rawItem: RawInventoryItem): NormalizedInventoryItem {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: id > product_id)
  const id = rawItem.id ?? rawItem.product_id;
  if (!id) {
    throw new Error('–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ ID –≤ –¥–∞–Ω–Ω—ã—Ö');
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: name > product_name)
  const name = rawItem.name ?? rawItem.product_name;
  if (!name) {
    throw new Error('–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –¥–∞–Ω–Ω—ã—Ö');
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: quantity > total_quantity)
  const quantityValue = rawItem.quantity ?? rawItem.total_quantity ?? 0;
  const quantity = typeof quantityValue === 'string' ? 
    parseFloat(quantityValue) : quantityValue;

  // –ë–∞–∑–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const normalized: NormalizedInventoryItem = {
    id: Number(id),
    name: String(name),
    quantity: Number(quantity) || 0
  };

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –µ—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
  if (rawItem.reserved !== undefined || rawItem.reserved_quantity !== undefined) {
    const reservedValue = rawItem.reserved ?? rawItem.reserved_quantity ?? 0;
    normalized.reserved = Number(typeof reservedValue === 'string' ? 
      parseFloat(reservedValue) : reservedValue) || 0;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –µ—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
  if (rawItem.available !== undefined || rawItem.available_quantity !== undefined) {
    const availableValue = rawItem.available ?? rawItem.available_quantity ?? 0;
    normalized.available = Number(typeof availableValue === 'string' ? 
      parseFloat(availableValue) : availableValue) || 0;
  }

  return normalized;
}

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
 */
export function normalizeInventoryArray(rawItems: RawInventoryItem[]): NormalizedInventoryItem[] {
  return rawItems.map((item, index) => {
    try {
      return normalizeInventoryItem(item);
    } catch (error) {
      throw new Error(`–û—à–∏–±–∫–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ ${index}: ${error instanceof Error ? error.message : String(error)}`);
    }
  });
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API –æ—Ç–≤–µ—Ç–∞
 * 
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –≤—Å–µ –ø–æ–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É API
 */
export function validateApiResponse(items: any[]): void {
  const forbiddenFields = [
    'product_id', 'product_name', 'total_quantity', 
    'reserved_quantity', 'available_quantity'
  ];

  for (let i = 0; i < items.length; i++) {
    const item = items[i];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!item.hasOwnProperty('id')) {
      throw new Error(`API –≤–∞–ª–∏–¥–∞—Ü–∏—è: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ 'id' –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${i}`);
    }
    if (!item.hasOwnProperty('name')) {
      throw new Error(`API –≤–∞–ª–∏–¥–∞—Ü–∏—è: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ 'name' –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${i}`);
    }
    if (!item.hasOwnProperty('quantity')) {
      throw new Error(`API –≤–∞–ª–∏–¥–∞—Ü–∏—è: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ 'quantity' –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${i}`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π –ë–î
    for (const field of forbiddenFields) {
      if (item.hasOwnProperty(field)) {
        throw new Error(`API –≤–∞–ª–∏–¥–∞—Ü–∏—è: –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ –ø–æ–ª–µ '${field}' –≤ —ç–ª–µ–º–µ–Ω—Ç–µ ${i}. API –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–æ–ª—å–∫–æ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—è.`);
      }
    }
  }
}