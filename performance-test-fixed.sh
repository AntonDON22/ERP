#!/bin/bash

echo "üöÄ –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´"
echo "=============================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ API (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã)
measure_api_time() {
    local endpoint=$1
    local method=${2:-GET}
    local data=${3:-""}
    
    if [ "$method" = "GET" ]; then
        response_time=$(curl -s -w "%{time_total}" -o /dev/null "http://localhost:5000/api$endpoint")
    else
        response_time=$(curl -s -w "%{time_total}" -o /dev/null -X "$method" -H "Content-Type: application/json" -d "$data" "http://localhost:5000/api$endpoint")
    fi
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã –∏—Å–ø–æ–ª—å–∑—É—è awk –≤–º–µ—Å—Ç–æ bc
    echo "$response_time" | awk '{printf "%.0f", $1 * 1000}'
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
if ! curl -s http://localhost:5000/api/products > /dev/null; then
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000"
    exit 1
fi
echo "‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"

# 1. –¢–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª–∏–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö API endpoints
echo ""
echo "‚è±Ô∏è –¢–ï–°–¢ –í–†–ï–ú–ï–ù–ò –û–¢–ö–õ–ò–ö–ê API (–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã)"
echo "========================================="

# –ë–∞–∑–æ–≤—ã–µ GET –∑–∞–ø—Ä–æ—Å—ã
products_time=$(measure_api_time "/products")
suppliers_time=$(measure_api_time "/suppliers")
contractors_time=$(measure_api_time "/contractors")
warehouses_time=$(measure_api_time "/warehouses")
documents_time=$(measure_api_time "/documents")
orders_time=$(measure_api_time "/orders")
inventory_time=$(measure_api_time "/inventory")
inventory_avail_time=$(measure_api_time "/inventory/availability")

echo "üì¶ /api/products:              ${products_time}ms"
echo "üè≠ /api/suppliers:             ${suppliers_time}ms"
echo "üë• /api/contractors:           ${contractors_time}ms"
echo "üè¢ /api/warehouses:            ${warehouses_time}ms"
echo "üìÑ /api/documents:             ${documents_time}ms"
echo "üõí /api/orders:                ${orders_time}ms"
echo "üìä /api/inventory:             ${inventory_time}ms"
echo "üîÑ /api/inventory/availability: ${inventory_avail_time}ms"

# –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è
total_time=$((products_time + suppliers_time + contractors_time + warehouses_time + documents_time + orders_time + inventory_time + inventory_avail_time))
avg_time=$((total_time / 8))

echo ""
echo "üìä –°–†–ï–î–ù–ï–ï –í–†–ï–ú–Ø API: ${avg_time}ms"

# 2. –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
echo ""
echo "üî• –ù–ê–ì–†–£–ó–û–ß–ù–´–ô –¢–ï–°–¢ - –°–û–ó–î–ê–ù–ò–ï –î–ê–ù–ù–´–•"
echo "====================================="

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ 5 —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤..."
created_products=0
start_time=$(date +%s%3N)

for i in {1..5}; do
    product_data="{\"name\":\"–ü–µ—Ä—Ñ–¢–µ—Å—Ç${i}\",\"sku\":\"PERF${i}\",\"price\":\"${i}00\",\"purchasePrice\":\"${i}0\"}"
    response=$(curl -s -w "%{http_code}" -X POST -H "Content-Type: application/json" -d "$product_data" "http://localhost:5000/api/products")
    if [[ "$response" == *"200"* ]] || [[ "$response" == *"201"* ]]; then
        ((created_products++))
    fi
done

products_creation_time=$(($(date +%s%3N) - start_time))
echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: $created_products/5 –∑–∞ ${products_creation_time}ms"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–ª–∞–¥–æ–≤
echo "üè¢ –°–æ–∑–¥–∞–Ω–∏–µ 2 —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–∫–ª–∞–¥–æ–≤..."
created_warehouses=0
start_time=$(date +%s%3N)

for i in {1..2}; do
    warehouse_data="{\"name\":\"–ü–µ—Ä—Ñ–°–∫–ª–∞–¥${i}\",\"address\":\"–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å ${i}\"}"
    response=$(curl -s -w "%{http_code}" -X POST -H "Content-Type: application/json" -d "$warehouse_data" "http://localhost:5000/api/warehouses")
    if [[ "$response" == *"200"* ]] || [[ "$response" == *"201"* ]]; then
        ((created_warehouses++))
    fi
done

warehouses_creation_time=$(($(date +%s%3N) - start_time))
echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–∫–ª–∞–¥–æ–≤: $created_warehouses/2 –∑–∞ ${warehouses_creation_time}ms"

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º URL
echo "üë• –°–æ–∑–¥–∞–Ω–∏–µ 3 —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤..."
created_contractors=0
start_time=$(date +%s%3N)

for i in {1..3}; do
    contractor_data="{\"name\":\"–ü–µ—Ä—Ñ–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç${i}\",\"website\":\"https://test${i}.com\"}"
    response=$(curl -s -w "%{http_code}" -X POST -H "Content-Type: application/json" -d "$contractor_data" "http://localhost:5000/api/contractors")
    if [[ "$response" == *"200"* ]] || [[ "$response" == *"201"* ]]; then
        ((created_contractors++))
    fi
done

contractors_creation_time=$(($(date +%s%3N) - start_time))
echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤: $created_contractors/3 –∑–∞ ${contractors_creation_time}ms"

# 3. –¢–µ—Å—Ç –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è - –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
echo ""
echo "üíæ –¢–ï–°–¢ –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–ò –ö–ï–®–ò–†–û–í–ê–ù–ò–Ø"
echo "================================="

echo "üîÑ –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Å—Ç–∞—Ç–∫–æ–≤ (–∏–∑–º–µ—Ä–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)..."
first_request_time=$(measure_api_time "/inventory/availability")
echo "   –í—Ä–µ–º—è: ${first_request_time}ms"

sleep 1

echo "üîÑ –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å –æ—Å—Ç–∞—Ç–∫–æ–≤ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è)..."
second_request_time=$(measure_api_time "/inventory/availability")
echo "   –í—Ä–µ–º—è: ${second_request_time}ms"

if [ "$second_request_time" -lt "$first_request_time" ]; then
    improvement=$((first_request_time - second_request_time))
    echo "‚úÖ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –£–ª—É—á—à–µ–Ω–∏–µ: ${improvement}ms"
elif [ "$first_request_time" -eq "$second_request_time" ]; then
    echo "‚ö° –°—Ç–∞–±–∏–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞: ${first_request_time}ms"
else
    echo "üìä –í—Ä–µ–º—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã"
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
echo ""
echo "üìä –°–ò–°–¢–ï–ú–ù–´–ï –ú–ï–¢–†–ò–ö–ò"
echo "==================="

metrics_response=$(curl -s "http://localhost:5000/api/metrics")
echo "üéØ –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã:"

# –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ —Å –ø–æ–º–æ—â—å—é grep –∏ sed
cache_hit_rate=$(echo "$metrics_response" | grep -o '"cacheHitRate":[0-9.]*' | cut -d':' -f2)
avg_response_time=$(echo "$metrics_response" | grep -o '"averageResponseTime":[0-9.]*' | cut -d':' -f2)

if [ -n "$cache_hit_rate" ]; then
    echo "   Cache Hit Rate: ${cache_hit_rate}%"
fi

if [ -n "$avg_response_time" ]; then
    echo "   –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: ${avg_response_time}ms"
fi

# 5. –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
echo ""
echo "üî• –°–¢–†–ï–°–°-–¢–ï–°–¢ –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–• –ó–ê–ü–†–û–°–û–í"
echo "===================================="

echo "üöÄ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ 10 –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API..."
stress_start_time=$(date +%s%3N)

# –ó–∞–ø—É—Å–∫–∞–µ–º 10 –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
for i in {1..10}; do
    curl -s "http://localhost:5000/api/products" > /dev/null &
done

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
wait

stress_total_time=$(($(date +%s%3N) - stress_start_time))
echo "‚úÖ 10 –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞: ${stress_total_time}ms"

# 6. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo ""
echo "üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò"
echo "===================================="
echo "üöÄ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è API:        ${avg_time}ms"
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤:         ${products_creation_time}ms (${created_products}/5)"
echo "üè¢ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–ª–∞–¥–æ–≤:         ${warehouses_creation_time}ms (${created_warehouses}/2)"
echo "üë• –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤:    ${contractors_creation_time}ms (${created_contractors}/3)"
echo "üíæ –í—Ä–µ–º—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è:        ${first_request_time}ms ‚Üí ${second_request_time}ms"
echo "üî• –°—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç (10 –∑–∞–ø—Ä–æ—Å–æ–≤): ${stress_total_time}ms"

# –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
if [ "$avg_time" -lt 50 ]; then
    echo "üü¢ –ü–†–ï–í–û–°–•–û–î–ù–û: –°–∏—Å—Ç–µ–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
elif [ "$avg_time" -lt 100 ]; then
    echo "üü¢ –û–¢–õ–ò–ß–ù–û: –°–∏—Å—Ç–µ–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã—Å–æ–∫—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
elif [ "$avg_time" -lt 200 ]; then
    echo "üü° –•–û–†–û–®–û: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–æ—Ä–º–µ"
else
    echo "üî¥ –í–ù–ò–ú–ê–ù–ò–ï: –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
fi

echo ""
echo "‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω"
echo "üìä –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"